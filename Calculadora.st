Object subclass: #Calculadora	instanceVariableNames: 'resultado historial valor1 valor2'	classVariableNames: ''	poolDictionaries: ''	category: 'Calculadora'!!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 15:47'!ans|a|a:=(self historial)at:(self historial size).^a! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:37'!radicacion|p|resultado:=(self valor1 raisedTo:(1/self valor2 )).self historial.p:=UIManager default request:'Quiere radicar otro valor con la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (self ans raisedTo:(1/self valor2 )).	self historial add:resultado					].^resultado.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:30'!suma|p|resultado:=(self valor1 + self valor2).self historial add:resultado.p:=UIManager default request:'Quiere sumar con la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (self ans + self valor2).	self historial add:resultado					].^resultado .! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:23'!valor2valor2:=(UIManager default request:'ingrese OTRO valor para sumar: ')asNumber .^valor2.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 15:49'!printOn:unaVentanaunaVentana nextPutAll: self historial! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:40'!tangente|p|resultado :=(((self valor1 degreesToRadians)tan)rounded).self historial.p:=UIManager default request:'Quiere aplicar tangente a la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (((self ans degreesToRadians)tan)rounded).	self historial add:resultado					].^resultado.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:38'!potencia|p|resultado:=(self valor1 raisedTo:self valor2).self historial add:resultado.p:=UIManager default request:'Quiere aplicar potencia un valor con la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (self ans raisedTo:self valor2).	self historial add:resultado					].^resultado.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:08'!initialize valor1:=0.valor2:=0.historial:=OrderedCollection new.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 15:18'!historial(historial isNil)ifTrue:[historial:=OrderedCollection new].^historial! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 15:55'!valor1valor1:=(UIManager default request:'ingrese un valor para sumar: ')asNumber .^valor1.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:39'!seno|p|resultado:=(self valor1 degreeCos).self historial.p:=UIManager default request:'Quiere aplicar seno a la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (self ans degreeCos).	self historial add:resultado					].^resultado.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:34'!multiplicacion|p|resultado:=(self valor1 * self valor2).self historial add:resultado.p:=UIManager default request:'Quiere multiplicar otro valor con la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (self ans * self valor2).	self historial add:resultado					].^resultado ! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:37'!resta|p|resultado:=(self valor1 - self valor2).self historial add:resultado.p:=UIManager default request:'Quiere restar otro valor con la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (self ans - self valor2).	self historial add:resultado					].^resultado.! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:39'!coseno|p|resultado:=(self valor1 degreeSin).self historial add: resultado.p:=UIManager default request:'Quiere aplicar coseno a la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= (self ans degreeSin).	self historial add:resultado					].^resultado! !!Calculadora methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2019 16:34'!division|p|(valor2=0) ifTrue: [self error: 'No se puede dividir por cero'] ifFalse:[resultado:=(self valor1 /self valor2)asFloat ].self historial add:resultado.p:=UIManager default request:'Quiere dividir con la ultima operacion (S/N)?'.(p='S')ifTrue:[resultado:= ((self ans /self valor2)asFloat).	self historial add:resultado					].^resultado .! !